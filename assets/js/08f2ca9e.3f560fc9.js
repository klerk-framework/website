"use strict";(self.webpackChunkklerk_website=self.webpackChunkklerk_website||[]).push([[8953],{1360:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var r=t(4848),a=t(8453);const o={sidebar_position:1},l="Klerk-web",i={id:"plugins/web",title:"Klerk-web",description:"Klerk-web is a set of tools that helps you build a server-side rendered (SSR) web application with",source:"@site/docs/plugins/web.md",sourceDirName:"plugins",slug:"/plugins/web",permalink:"/docs/plugins/web",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Plugins",permalink:"/docs/category/plugins"},next:{title:"Klerk-graphql",permalink:"/docs/plugins/graphql"}},s={},d=[{value:"Easy mode",id:"easy-mode",level:2},{value:"Full control mode",id:"full-control-mode",level:2},{value:"Create a template",id:"create-a-template",level:3},{value:"Build the form",id:"build-the-form",level:3},{value:"Render the form",id:"render-the-form",level:3},{value:"Parse the data",id:"parse-the-data",level:3}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"klerk-web",children:"Klerk-web"}),"\n",(0,r.jsxs)(n.p,{children:["Klerk-web is a set of tools that helps you build a server-side rendered (SSR) web application with\n",(0,r.jsx)(n.a,{href:"https://klerkframework.dev/",children:"Klerk"}),". It should be used together with ",(0,r.jsx)(n.a,{href:"https://ktor.io",children:"Ktor"}),"."]}),"\n",(0,r.jsx)(n.h1,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(n.p,{children:["Typically, you will generate a Ktor project using ",(0,r.jsx)(n.a,{href:"https://start.ktor.io/",children:"the Ktor project generator"})," or from within\nIntelliJ (File\u2192New\u2192Project). You then add Klerk and Klerk-web to your project:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'implementation("com.github.klerk-framework:klerk:$klerk_version")\nimplementation("com.github.klerk-framework:klerk-web:$klerk_web_version") \n'})}),"\n",(0,r.jsxs)(n.p,{children:["For details on how to set up Klerk, see the ",(0,r.jsx)(n.a,{href:"https://klerkframework.dev/docs/intro",children:"Klerk documentation"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"You will need a LowCodeConfig when using Klerk-web:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'val lowCodeConfig = LowCodeConfig(\n    basePath = "/admin",\n    contextProvider = ::contextFromCall,\n    showOptionalParameters = ::showOptionalParameters,\n    cssPath = "https://unpkg.com/almond.css@latest/dist/almond.min.css",\n    knownAlgorithms = setOf()\n)\n\nsuspend fun contextFromCall(call: ApplicationCall): Ctx {\n    // as described in https://klerkframework.dev/docs/building-config/context a Context is always required when \n    // interacting with Klerk. This function tells Klerk-web how to get this Context.  \n}\n\nfun showOptionalParameters(event: EventReference) = false   // this function will not required in the future\n'})}),"\n",(0,r.jsx)(n.h1,{id:"admin-ui",children:"Admin UI"}),"\n",(0,r.jsx)(n.p,{children:"The plugin can generate an admin-UI which allows you to browse the data, issue commands,\nview documentation (state diagrams, event parameters etc.), audit logs and more. Even if you will eventually\nbuild your own admin-UI, this auto generated UI can be helpful in the beginning of your project.\nTo auto-generate an admin-UI for your application, add this in your Ktor routing:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"    routing {\n        apply(LowCodeMain(klerk, lowCodeConfig).registerRoutes())\n    }\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can now browse to \xb4/admin\xb4."}),"\n",(0,r.jsx)(n.h1,{id:"forms",children:"Forms"}),"\n",(0,r.jsxs)(n.p,{children:["Klerk-web helps you render HTML forms for your event parameters. It takes care of\ncross-site request forgery (CSRF) protection and ",(0,r.jsx)(n.a,{href:"/docs/usage/commands#idempotence",children:"idempotence"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"The form will apply the validation rules you have\nspecified in your Klerk configuration:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Simple validation rules will be encoded in the HTML form itself. E.g. if you have specified that the FirstName\nmust have at least 3 letters, the Klerk-web will add ",(0,r.jsx)(n.code,{children:"minlength=3"})," to the ",(0,r.jsx)(n.code,{children:"input"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Complex validation rules (e.g. validation functions) will have to be evaluated on the server.\nKlerk-web handles this by executing a dry-run command in the background. If it fails, the error is rendered into the form."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"There are two ways you can render the forms:"}),"\n",(0,r.jsx)(n.h2,{id:"easy-mode",children:"Easy mode"}),"\n",(0,r.jsx)(n.p,{children:"Klerk-web offers a quick way to implement interactions with your Klerk configuration. It will probably not be good\nenough for the final version of your application, but it can significantly speed up your iteration speed in the beginning\nof the project. Klerk-web will render a button for each of your events. When the button is clicked, a form is rendered.\nWhen the form is submitted, the command is executed."}),"\n",(0,r.jsx)(n.p,{children:"This is how it can be used when rendering buttons for the void events of a game:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'val buttonTargets = ButtonTargets(back = "/", model = "/game/{id}", error = "/")    // where to navigate after form \ncall.respondHtml {\n    body {\n        h2 { +"Things you can do" }\n        getPossibleVoidEvents(Game::class).forEach {\n            apply(LowCodeCreateEvent.renderButton(it, klerk, null, lowCodeConfig, buttonTargets, context))\n        }\n    }\n'})}),"\n",(0,r.jsx)(n.p,{children:"Similarly, if you have an instance of the game:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'call.respondHtml {\n    body {\n        h3 { +"Things you can do with this game" }\n        getPossibleEvents(gameId).forEach {\n            apply(LowCodeCreateEvent.renderButton(it, klerk, gameId, lowCodeConfig, buttonTargets, context))\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"full-control-mode",children:"Full control mode"}),"\n",(0,r.jsx)(n.p,{children:"Sooner or later you will likely want to have full control of how the form is rendered. When rendering a form this way,\nthere are four steps:"}),"\n",(0,r.jsx)(n.h3,{id:"create-a-template",children:"Create a template"}),"\n",(0,r.jsxs)(n.p,{children:["We will first create a template for the form. This template should be created once when the application starts. It is\nrecommended to call ",(0,r.jsx)(n.code,{children:"validate()"})," on the template on application startup so that we can fail fast if there is a problem\nwith the template. Assuming you have a parameter class ",(0,r.jsx)(n.code,{children:"CreateAuthorParams"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'val createAuthorFormTemplate = EventFormTemplate(\n    EventWithParameters(\n        CreateAuthor.id,\n        EventParameters(CreateAuthorParams::class)\n    ), klerk, "/",\n) {\n    text(CreateAuthorParams::firstName)\n    text(CreateAuthorParams::lastName)\n    text(CreateAuthorParams::phone)\n    number(CreateAuthorParams::age)\n    populatedAfterSubmit(CreateAuthorParams::secretToken)\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"build-the-form",children:"Build the form"}),"\n",(0,r.jsxs)(n.p,{children:["Before calling ",(0,r.jsx)(n.code,{children:"call.respondHtml"})," we need to build the form:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:'val initialValues = CreateAuthorParams(\n    firstName = FirstName("James"),\n    lastName = LastName("Clavell"),\n)\nval createAuthorForm = klerk.read(context) {\n    createAuthorFormTemplate.build(call, initialValues, this, translator = context.translator)\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"render-the-form",children:"Render the form"}),"\n",(0,r.jsx)(n.p,{children:"Now we can render the form like this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"call.respondHtml {\n    body {\n        createAuthorForm.render(this)\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"parse-the-data",children:"Parse the data"}),"\n",(0,r.jsx)(n.p,{children:"When the form is submitted, we need to parse the data into an instance of the parameter class. The template will help\nwith this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-kotlin",children:"when (val result = createAuthorFormTemplate.parse(call)) {\n    is Invalid -> EventFormTemplate.respondInvalid(result, call)\n    is DryRun -> // TODO: describe what to do here\n    is Parsed -> // the parameters are now available in result.params\n}\n"})}),"\n",(0,r.jsx)(n.h1,{id:"render-a-list-of-models",children:"Render a list of models"}),"\n",(0,r.jsx)(n.p,{children:"TODO"}),"\n",(0,r.jsx)(n.h1,{id:"render-a-model",children:"Render a model"}),"\n",(0,r.jsx)(n.p,{children:"TODO"}),"\n",(0,r.jsx)(n.h1,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(n.p,{children:["To learn more how Klerk-web can be used, see the ",(0,r.jsx)(n.a,{href:"https://github.com/search?q=org%3Aklerk-framework+example&type=repositories",children:"examples"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>i});var r=t(6540);const a={},o=r.createContext(a);function l(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);