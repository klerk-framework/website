"use strict";(self.webpackChunkklerk_website=self.webpackChunkklerk_website||[]).push([[485],{4988:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var a=t(4848),i=t(8453);const o={sidebar_position:6},l="Validation",r={id:"building-config/validation",title:"Validation",description:"In order to maintain data integrity, Klerk lets you add validation rules. These rules apply to different levels.",source:"@site/docs/building-config/validation.md",sourceDirName:"building-config",slug:"/building-config/validation",permalink:"/klerk/docs/building-config/validation",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Authorization",permalink:"/klerk/docs/building-config/authorization"},next:{title:"Usage",permalink:"/klerk/docs/category/usage"}},s={},d=[{value:"DataContainer validation",id:"datacontainer-validation",level:2},{value:"Model",id:"model",level:2},{value:"Event parameters",id:"event-parameters",level:2}];function c(e){const n={h1:"h1",h2:"h2",p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"validation",children:"Validation"}),"\n",(0,a.jsx)(n.p,{children:"In order to maintain data integrity, Klerk lets you add validation rules. These rules apply to different levels.\nIt is recommended to validate on the lowest level possible, i.e. validate as much as you can on the DataContainers, then\nmove on to the Model level and so on."}),"\n",(0,a.jsx)(n.h2,{id:"datacontainer-validation",children:"DataContainer validation"}),"\n",(0,a.jsx)(n.p,{children:"When specifying your data types, you should also specify which values are valid. E.g. the IntContainer class allows you\nto set min and max values. The StringContainer lets you add min and max length and a regex-validator. Additionally, all\ncontainer classes lets you specify a validation function, making it possible to have an EvenIntContainer class that\nonly allows even integers."}),"\n",(0,a.jsx)(n.h2,{id:"model",children:"Model"}),"\n",(0,a.jsx)(n.p,{children:'On this level you validate the whole model. Here you can add rules like "The user must either have a phone number or a\nstreet address".'}),"\n",(0,a.jsx)(n.h2,{id:"event-parameters",children:"Event parameters"}),"\n",(0,a.jsx)(n.p,{children:"Similar to models, you can add validation rules to considering all parameters of an event."})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var a=t(6540);const i={},o=a.createContext(i);function l(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);