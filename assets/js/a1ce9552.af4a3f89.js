"use strict";(self.webpackChunkklerk_website=self.webpackChunkklerk_website||[]).push([[7878],{3115:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var t=n(4848),o=n(8453);const l={sidebar_position:2},s="Klerk-graphql",i={id:"plugins/graphql",title:"Klerk-graphql",description:"Klerk-graphql generates a GraphQL API for your Klerk application.",source:"@site/docs/plugins/graphql.md",sourceDirName:"plugins",slug:"/plugins/graphql",permalink:"/docs/plugins/graphql",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Klerk-web",permalink:"/docs/plugins/web"}},a={},p=[];function h(e){const r={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"klerk-graphql",children:"Klerk-graphql"}),"\n",(0,t.jsxs)(r.p,{children:["Klerk-graphql generates a GraphQL API for your Klerk application.\nIt should be used together with ",(0,t.jsx)(r.a,{href:"https://opensource.expediagroup.com/graphql-kotlin/docs/server/graphql-server/",children:"GraphQL Kotlin"})," and ",(0,t.jsx)(r.a,{href:"https://ktor.io",children:"Ktor"}),"."]}),"\n",(0,t.jsx)(r.h1,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(r.p,{children:"Add graphql-kotlin-ktor-server and klerk-graphql to your project:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-kotlin",children:'implementation("com.expediagroup:graphql-kotlin-ktor-server:$graphql_version")\nimplementation("com.github.klerk-framework:klerk-graphql:$klerk_graphql_version")\n'})}),"\n",(0,t.jsxs)(r.p,{children:["For details on how to set up Klerk, see the ",(0,t.jsx)(r.a,{href:"/docs/intro",children:"Klerk documentation"}),"."]}),"\n",(0,t.jsx)(r.p,{children:"Install the GraphQL plugin, specifying the schema like this:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-kotlin",children:'embeddedServer(Netty, port = 8080, host = "0.0.0.0", module = {\n    install(GraphQL) {\n        schema {\n            packages = listOf("dev.klerkframework.graphql")\n            queries = listOf(GenericQuery(klerk, ::graphQlContextProvider))\n            mutations = listOf(EventMutationService(klerk, ::graphQlContextProvider))\n        }\n    }\n    // remaining configuration\n}).start(wait = true)\n'})}),"\n",(0,t.jsx)(r.p,{children:"Create a function to create a context:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-kotlin",children:"suspend fun graphQlContextProvider(graphQlContext: GraphQLContext): Ctx {\n    // as described in https://klerkframework.dev/docs/building-config/context a Context is always required when \n    // interacting with Klerk. This function tells Klerk-web how to get this Context.  \n}\n"})}),"\n",(0,t.jsx)(r.p,{children:"Now use graphql-kotlin-ktor-server as normal:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-kotlin",children:"routing {\n    graphQLPostRoute()\n    graphQLGetRoute()\n    graphiQLRoute()\n    graphQLSDLRoute()\n}\n"})}),"\n",(0,t.jsx)(r.p,{children:"You can now browse to /graphiql to explore the API."}),"\n",(0,t.jsx)(r.h1,{id:"examples",children:"Examples"}),"\n",(0,t.jsxs)(r.p,{children:["To learn more how Klerk-graphql can be used, see the ",(0,t.jsx)(r.a,{href:"https://github.com/search?q=org%3Aklerk-framework+example&type=repositories",children:"examples"}),"."]})]})}function c(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>i});var t=n(6540);const o={},l=t.createContext(o);function s(e){const r=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(l.Provider,{value:r},e.children)}}}]);