"use strict";(self.webpackChunkklerk_website=self.webpackChunkklerk_website||[]).push([[2705],{5756:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var s=n(4848),i=n(8453);const r={sidebar_position:4},a="Persistence",o={id:"advanced-topics/persistence",title:"Persistence",description:"Klerk uses an SQL database under the hood to persist the data. It creates tables prefixed with klerk_. You are free to",source:"@site/docs/advanced-topics/persistence.md",sourceDirName:"advanced-topics",slug:"/advanced-topics/persistence",permalink:"/docs/advanced-topics/persistence",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Security",permalink:"/docs/advanced-topics/security"},next:{title:"Performance",permalink:"/docs/advanced-topics/performance"}},d={},c=[{value:"Supported databases",id:"supported-databases",level:2},{value:"Configuration",id:"configuration",level:2},{value:"SQLite",id:"sqlite",level:3}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"persistence",children:"Persistence"}),"\n",(0,s.jsxs)(t.p,{children:["Klerk uses an SQL database under the hood to persist the data. It creates tables prefixed with ",(0,s.jsx)(t.code,{children:"klerk_"}),". You are free to\nuse the same database if you want to store data outside Klerk, but be sure to not interfere with Klerk's tables."]}),"\n",(0,s.jsx)(t.h2,{id:"supported-databases",children:"Supported databases"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"SQLite"}),"\n",(0,s.jsx)(t.li,{children:"PostgreSQL"}),"\n",(0,s.jsx)(t.li,{children:"MariaDB"}),"\n",(0,s.jsx)(t.li,{children:"MySQL"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(t.h3,{id:"sqlite",children:"SQLite"}),"\n",(0,s.jsx)(t.p,{children:"To configure Klerk to use an SQLite database, first add a dependency to sqlite-jdbc in build.gradle.kts:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'implementation("org.xerial:sqlite-jdbc:$sqliteJdbcVersion")\n'})}),"\n",(0,s.jsx)(t.p,{children:"Now create a datasource:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'val ds = SQLiteDataSource()\nds.url = "jdbc:sqlite:/path/to/database"\n'})}),"\n",(0,s.jsx)(t.p,{children:"Create a SqlPersistence object and configure Klerk to use it:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"val sqlitePersistence = SqlPersistence(ds)\nval config = ConfigBuilder<Ctx, Data>(Data).build {\n    persistence(sqlitePersistence)\n    ...\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(6540);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);